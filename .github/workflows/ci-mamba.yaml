# Basic Mamba CI pipeline on top of CCTBX

name: CI pipeline on Mamba

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  # run daily to ensure that changes to dependenices are not breaking tests
  schedule:
    - cron: "30 21 * * *"
  workflow_dispatch:

env:
  # MOPAC_COMMAND: $CONDA_PREFIX/bin/mopac
  # XTBHOME: $CONDA_PREFIX
  PY: "python3.10"
  #CLEANUP_TESTS: 'FALSE'

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -leo pipefail {0} {0}

    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: df
        run: df -h

      - uses: mamba-org/setup-micromamba@v1.8.0
        with:
          environment-file: environment.yaml
          cache-environment: true
          environment-name: qrefine-ci-mamba
          post-cleanup: all

      - name: run installer
        run: |
          sh build_into_conda.sh

      - name: smoke test
        run: |
          source $CONDA_PREFIX/lib/$PY/site-packages/build/setpaths.sh
          qr.refine --help
          env

      - name: qr.test
        run: |
          cd  /home/runner/work/qrefine/qrefine/
          pwd
          mkdir testing_workdir
          cd testing_workdir
          source $CONDA_PREFIX/lib/$PY/site-packages/build/setpaths.sh
          qr.test | tee ../qr_test.txt

      - name: looks at testing_workdir
        if: always()
        run: ls -R
        working-directory: /home/runner/work/qrefine/qrefine/testing_workdir

      - name: Archive qr test output
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: qr-test-output
          path: ./qr_test.txt

      - name: Archive qr-log files output
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: tests-dir
          path: /home/runner/work/qrefine/qrefine/testing_workdir

    # Too much noise at the moment
    #- name: Report Status
    #  if: always()
    #  uses: ravsamhq/notify-slack-action@v2
    #  with:
    #    status: ${{ job.status }}
    #    notify_when: 'failure'
    #  env:
    #    SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}
